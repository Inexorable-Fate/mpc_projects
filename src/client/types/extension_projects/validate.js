"use strict";export const validate = validate10;const schema11 = {"anyOf":[{"$ref":"#/definitions/Project"},{"$ref":"#/definitions/Project_1"},{"$ref":"#/definitions/Project_2"}],"definitions":{"Project":{"type":"object","properties":{"version":{"type":"number","const":1},"code":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}}},"required":["cards","code","version"]},"Card":{"type":"object","properties":{"count":{"type":"number"},"front":{"$ref":"#/definitions/CardFace"},"back":{"$ref":"#/definitions/CardFace"}},"required":["count"]},"CardFace":{"type":"object","properties":{"Name":{"type":"string"},"ID":{"type":"string"},"SourceID":{"type":"string"},"Exp":{"type":"string"},"Width":{"type":"number"},"Height":{"type":"number"}},"required":["Exp","Height","ID","Name","SourceID","Width"]},"Project_1":{"type":"object","properties":{"version":{"type":"number","const":2},"code":{"type":"string"},"parts":{"type":"array","items":{"$ref":"#/definitions/Part"}}},"required":["code","parts","version"]},"Part":{"type":"object","properties":{"name":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}}},"required":["cards","name"]},"Project_2":{"type":"object","properties":{"version":{"type":"number","const":3},"parts":{"type":"array","items":{"$ref":"#/definitions/Part_1"}}},"required":["parts","version"]},"Part_1":{"type":"object","properties":{"code":{"type":"string"},"name":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}}},"required":["cards","code","name"]}},"$schema":"http://json-schema.org/draft-07/schema#"};const schema12 = {"type":"object","properties":{"version":{"type":"number","const":1},"code":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}}},"required":["cards","code","version"]};const schema13 = {"type":"object","properties":{"count":{"type":"number"},"front":{"$ref":"#/definitions/CardFace"},"back":{"$ref":"#/definitions/CardFace"}},"required":["count"]};const schema14 = {"type":"object","properties":{"Name":{"type":"string"},"ID":{"type":"string"},"SourceID":{"type":"string"},"Exp":{"type":"string"},"Width":{"type":"number"},"Height":{"type":"number"}},"required":["Exp","Height","ID","Name","SourceID","Width"]};function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.count === undefined) && (missing0 = "count")){validate12.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.count !== undefined){let data0 = data.count;const _errs1 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){validate12.errors = [{instancePath:instancePath+"/count",schemaPath:"#/properties/count/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.front !== undefined){let data1 = data.front;const _errs3 = errors;const _errs4 = errors;if(errors === _errs4){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;if(((((((data1.Exp === undefined) && (missing1 = "Exp")) || ((data1.Height === undefined) && (missing1 = "Height"))) || ((data1.ID === undefined) && (missing1 = "ID"))) || ((data1.Name === undefined) && (missing1 = "Name"))) || ((data1.SourceID === undefined) && (missing1 = "SourceID"))) || ((data1.Width === undefined) && (missing1 = "Width"))){validate12.errors = [{instancePath:instancePath+"/front",schemaPath:"#/definitions/CardFace/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data1.Name !== undefined){const _errs6 = errors;if(typeof data1.Name !== "string"){validate12.errors = [{instancePath:instancePath+"/front/Name",schemaPath:"#/definitions/CardFace/properties/Name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data1.ID !== undefined){const _errs8 = errors;if(typeof data1.ID !== "string"){validate12.errors = [{instancePath:instancePath+"/front/ID",schemaPath:"#/definitions/CardFace/properties/ID/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data1.SourceID !== undefined){const _errs10 = errors;if(typeof data1.SourceID !== "string"){validate12.errors = [{instancePath:instancePath+"/front/SourceID",schemaPath:"#/definitions/CardFace/properties/SourceID/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data1.Exp !== undefined){const _errs12 = errors;if(typeof data1.Exp !== "string"){validate12.errors = [{instancePath:instancePath+"/front/Exp",schemaPath:"#/definitions/CardFace/properties/Exp/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data1.Width !== undefined){let data6 = data1.Width;const _errs14 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate12.errors = [{instancePath:instancePath+"/front/Width",schemaPath:"#/definitions/CardFace/properties/Width/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data1.Height !== undefined){let data7 = data1.Height;const _errs16 = errors;if(!((typeof data7 == "number") && (isFinite(data7)))){validate12.errors = [{instancePath:instancePath+"/front/Height",schemaPath:"#/definitions/CardFace/properties/Height/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}}}}}}}}else {validate12.errors = [{instancePath:instancePath+"/front",schemaPath:"#/definitions/CardFace/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.back !== undefined){let data8 = data.back;const _errs18 = errors;const _errs19 = errors;if(errors === _errs19){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){let missing2;if(((((((data8.Exp === undefined) && (missing2 = "Exp")) || ((data8.Height === undefined) && (missing2 = "Height"))) || ((data8.ID === undefined) && (missing2 = "ID"))) || ((data8.Name === undefined) && (missing2 = "Name"))) || ((data8.SourceID === undefined) && (missing2 = "SourceID"))) || ((data8.Width === undefined) && (missing2 = "Width"))){validate12.errors = [{instancePath:instancePath+"/back",schemaPath:"#/definitions/CardFace/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {if(data8.Name !== undefined){const _errs21 = errors;if(typeof data8.Name !== "string"){validate12.errors = [{instancePath:instancePath+"/back/Name",schemaPath:"#/definitions/CardFace/properties/Name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs21 === errors;}else {var valid4 = true;}if(valid4){if(data8.ID !== undefined){const _errs23 = errors;if(typeof data8.ID !== "string"){validate12.errors = [{instancePath:instancePath+"/back/ID",schemaPath:"#/definitions/CardFace/properties/ID/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs23 === errors;}else {var valid4 = true;}if(valid4){if(data8.SourceID !== undefined){const _errs25 = errors;if(typeof data8.SourceID !== "string"){validate12.errors = [{instancePath:instancePath+"/back/SourceID",schemaPath:"#/definitions/CardFace/properties/SourceID/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs25 === errors;}else {var valid4 = true;}if(valid4){if(data8.Exp !== undefined){const _errs27 = errors;if(typeof data8.Exp !== "string"){validate12.errors = [{instancePath:instancePath+"/back/Exp",schemaPath:"#/definitions/CardFace/properties/Exp/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs27 === errors;}else {var valid4 = true;}if(valid4){if(data8.Width !== undefined){let data13 = data8.Width;const _errs29 = errors;if(!((typeof data13 == "number") && (isFinite(data13)))){validate12.errors = [{instancePath:instancePath+"/back/Width",schemaPath:"#/definitions/CardFace/properties/Width/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs29 === errors;}else {var valid4 = true;}if(valid4){if(data8.Height !== undefined){let data14 = data8.Height;const _errs31 = errors;if(!((typeof data14 == "number") && (isFinite(data14)))){validate12.errors = [{instancePath:instancePath+"/back/Height",schemaPath:"#/definitions/CardFace/properties/Height/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs31 === errors;}else {var valid4 = true;}}}}}}}}else {validate12.errors = [{instancePath:instancePath+"/back",schemaPath:"#/definitions/CardFace/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs18 === errors;}else {var valid0 = true;}}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.cards === undefined) && (missing0 = "cards")) || ((data.code === undefined) && (missing0 = "code"))) || ((data.version === undefined) && (missing0 = "version"))){validate11.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.version !== undefined){let data0 = data.version;const _errs1 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){validate11.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}if(1 !== data0){validate11.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/const",keyword:"const",params:{allowedValue: 1},message:"must be equal to constant"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.code !== undefined){const _errs3 = errors;if(typeof data.code !== "string"){validate11.errors = [{instancePath:instancePath+"/code",schemaPath:"#/properties/code/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.cards !== undefined){let data2 = data.cards;const _errs5 = errors;if(errors === _errs5){if(Array.isArray(data2)){var valid1 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){const _errs7 = errors;if(!(validate12(data2[i0], {instancePath:instancePath+"/cards/" + i0,parentData:data2,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid1 = _errs7 === errors;if(!valid1){break;}}}else {validate11.errors = [{instancePath:instancePath+"/cards",schemaPath:"#/properties/cards/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}const schema16 = {"type":"object","properties":{"version":{"type":"number","const":2},"code":{"type":"string"},"parts":{"type":"array","items":{"$ref":"#/definitions/Part"}}},"required":["code","parts","version"]};const schema17 = {"type":"object","properties":{"name":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}}},"required":["cards","name"]};function validate16(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.cards === undefined) && (missing0 = "cards")) || ((data.name === undefined) && (missing0 = "name"))){validate16.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.name !== undefined){const _errs1 = errors;if(typeof data.name !== "string"){validate16.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.cards !== undefined){let data1 = data.cards;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs5 = errors;if(!(validate12(data1[i0], {instancePath:instancePath+"/cards/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate16.errors = [{instancePath:instancePath+"/cards",schemaPath:"#/properties/cards/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}}else {validate16.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate16.errors = vErrors;return errors === 0;}function validate15(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.code === undefined) && (missing0 = "code")) || ((data.parts === undefined) && (missing0 = "parts"))) || ((data.version === undefined) && (missing0 = "version"))){validate15.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.version !== undefined){let data0 = data.version;const _errs1 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){validate15.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}if(2 !== data0){validate15.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/const",keyword:"const",params:{allowedValue: 2},message:"must be equal to constant"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.code !== undefined){const _errs3 = errors;if(typeof data.code !== "string"){validate15.errors = [{instancePath:instancePath+"/code",schemaPath:"#/properties/code/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.parts !== undefined){let data2 = data.parts;const _errs5 = errors;if(errors === _errs5){if(Array.isArray(data2)){var valid1 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){const _errs7 = errors;if(!(validate16(data2[i0], {instancePath:instancePath+"/parts/" + i0,parentData:data2,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate16.errors : vErrors.concat(validate16.errors);errors = vErrors.length;}var valid1 = _errs7 === errors;if(!valid1){break;}}}else {validate15.errors = [{instancePath:instancePath+"/parts",schemaPath:"#/properties/parts/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}}else {validate15.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate15.errors = vErrors;return errors === 0;}const schema18 = {"type":"object","properties":{"version":{"type":"number","const":3},"parts":{"type":"array","items":{"$ref":"#/definitions/Part_1"}}},"required":["parts","version"]};const schema19 = {"type":"object","properties":{"code":{"type":"string"},"name":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}}},"required":["cards","code","name"]};function validate21(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.cards === undefined) && (missing0 = "cards")) || ((data.code === undefined) && (missing0 = "code"))) || ((data.name === undefined) && (missing0 = "name"))){validate21.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.code !== undefined){const _errs1 = errors;if(typeof data.code !== "string"){validate21.errors = [{instancePath:instancePath+"/code",schemaPath:"#/properties/code/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs3 = errors;if(typeof data.name !== "string"){validate21.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.cards !== undefined){let data2 = data.cards;const _errs5 = errors;if(errors === _errs5){if(Array.isArray(data2)){var valid1 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){const _errs7 = errors;if(!(validate12(data2[i0], {instancePath:instancePath+"/cards/" + i0,parentData:data2,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid1 = _errs7 === errors;if(!valid1){break;}}}else {validate21.errors = [{instancePath:instancePath+"/cards",schemaPath:"#/properties/cards/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}}else {validate21.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate21.errors = vErrors;return errors === 0;}function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.parts === undefined) && (missing0 = "parts")) || ((data.version === undefined) && (missing0 = "version"))){validate20.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.version !== undefined){let data0 = data.version;const _errs1 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){validate20.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}if(3 !== data0){validate20.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/const",keyword:"const",params:{allowedValue: 3},message:"must be equal to constant"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.parts !== undefined){let data1 = data.parts;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs5 = errors;if(!(validate21(data1[i0], {instancePath:instancePath+"/parts/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate21.errors : vErrors.concat(validate21.errors);errors = vErrors.length;}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate20.errors = [{instancePath:instancePath+"/parts",schemaPath:"#/properties/parts/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs0 = errors;let valid0 = false;const _errs1 = errors;if(!(validate11(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var _valid0 = _errs1 === errors;valid0 = valid0 || _valid0;if(!valid0){const _errs2 = errors;if(!(validate15(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);errors = vErrors.length;}var _valid0 = _errs2 === errors;valid0 = valid0 || _valid0;if(!valid0){const _errs3 = errors;if(!(validate20(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate20.errors : vErrors.concat(validate20.errors);errors = vErrors.length;}var _valid0 = _errs3 === errors;valid0 = valid0 || _valid0;}}if(!valid0){const err0 = {instancePath,schemaPath:"#/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;validate10.errors = vErrors;return false;}else {errors = _errs0;if(vErrors !== null){if(_errs0){vErrors.length = _errs0;}else {vErrors = null;}}}validate10.errors = vErrors;return errors === 0;}