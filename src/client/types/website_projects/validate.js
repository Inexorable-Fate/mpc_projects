"use strict";export const validate = validate10;const schema11 = {"anyOf":[{"$ref":"#/definitions/Project"},{"$ref":"#/definitions/Project_1"},{"$ref":"#/definitions/Project_2"},{"$ref":"#/definitions/Project_3"},{"$ref":"#/definitions/Project_4"},{"$ref":"#/definitions/Project_5"}],"definitions":{"Project":{"type":"object","properties":{"version":{"type":"number","const":1},"code":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}},"projectId":{"type":"array","items":{"type":"string"}},"name":{"type":"string"},"description":{"type":"string"},"artist":{"type":["null","string"]},"info":{"type":["null","string"]},"website":{"type":["null","string"]},"cardsLink":{"type":["null","string"]},"scenarioCount":{"type":"number"},"investigatorCount":{"type":"number"},"authors":{"type":"array","items":{"type":"string"}},"statuses":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"type":"string"}},"created":{"type":"string"},"updated":{"type":"string"},"hash":{"type":"string"}},"required":["authors","cards","code","created","description","hash","investigatorCount","name","projectId","scenarioCount","statuses","tags","updated","version"]},"Card":{"type":"object","properties":{"count":{"type":"number"},"front":{"$ref":"#/definitions/CardFace"},"back":{"$ref":"#/definitions/CardFace"}},"required":["count"]},"CardFace":{"type":"object","properties":{"Name":{"type":"string"},"ID":{"type":"string"},"SourceID":{"type":"string"},"Exp":{"type":"string"},"Width":{"type":"number"},"Height":{"type":"number"}},"required":["Exp","Height","ID","Name","SourceID","Width"]},"Project_1":{"type":"object","properties":{"version":{"type":"number","const":2},"code":{"type":"string"},"parts":{"type":"array","items":{"$ref":"#/definitions/Part"}},"projectId":{"type":"array","items":{"type":"string"}},"name":{"type":"string"},"description":{"type":"string"},"artist":{"type":["null","string"]},"info":{"type":["null","string"]},"website":{"type":["null","string"]},"cardsLink":{"type":["null","string"]},"scenarioCount":{"type":"number"},"investigatorCount":{"type":"number"},"authors":{"type":"array","items":{"type":"string"}},"statuses":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"type":"string"}},"created":{"type":"string"},"updated":{"type":"string"},"hash":{"type":"string"}},"required":["authors","code","created","description","hash","investigatorCount","name","parts","projectId","scenarioCount","statuses","tags","updated","version"]},"Part":{"type":"object","properties":{"enabled":{"type":"boolean"},"name":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}}},"required":["cards","name"]},"Project_2":{"type":"object","properties":{"version":{"type":"number","const":4},"options":{"type":"array","items":{"$ref":"#/definitions/Option"}},"projectId":{"type":"array","items":{"type":"string"}},"name":{"type":"string"},"description":{"type":"string"},"artist":{"type":["null","string"]},"info":{"type":["null","string"]},"website":{"type":["null","string"]},"cardsLink":{"type":["null","string"]},"scenarioCount":{"type":"number"},"investigatorCount":{"type":"number"},"authors":{"type":"array","items":{"type":"string"}},"statuses":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"type":"string"}},"created":{"type":"string"},"updated":{"type":"string"},"hash":{"type":"string"}},"required":["authors","created","description","hash","investigatorCount","name","options","projectId","scenarioCount","statuses","tags","updated","version"]},"Option":{"type":"object","properties":{"name":{"type":"string"},"parts":{"type":"array","items":{"$ref":"#/definitions/Part_1"}}},"required":["name","parts"]},"Part_1":{"type":"object","properties":{"enabled":{"type":"boolean"},"code":{"type":"string"},"name":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}}},"required":["cards","code","name"]},"Project_3":{"type":"object","properties":{"version":{"type":"number","const":6},"options":{"type":"array","items":{"$ref":"#/definitions/Option_1"}},"projectIds":{"type":"object","additionalProperties":{"type":"string"}},"name":{"type":"string"},"description":{"type":"string"},"artist":{"type":["null","string"]},"info":{"type":["null","string"]},"website":{"type":["null","string"]},"cardsLink":{"type":["null","string"]},"scenarioCount":{"type":"number"},"investigatorCount":{"type":"number"},"authors":{"type":"array","items":{"type":"string"}},"statuses":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"type":"string"}},"created":{"type":"string"},"updated":{"type":"string"},"hash":{"type":"string"},"hidden":{"type":"boolean"}},"required":["authors","created","description","hash","investigatorCount","name","options","projectIds","scenarioCount","statuses","tags","updated","version"]},"Option_1":{"type":"object","properties":{"name":{"type":"string"},"parts":{"type":"array","items":{"$ref":"#/definitions/Part_2"}}},"required":["name","parts"]},"Part_2":{"type":"object","properties":{"enabled":{"type":"boolean"},"size":{"type":"string"},"code":{"type":"string"},"name":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}}},"required":["cards","code","name","size"]},"Project_4":{"type":"object","properties":{"version":{"type":"number","const":5},"options":{"type":"array","items":{"$ref":"#/definitions/Option_2"}},"projectIds":{"type":"object","additionalProperties":{"type":"string"}},"name":{"type":"string"},"description":{"type":"string"},"artist":{"type":["null","string"]},"info":{"type":["null","string"]},"website":{"type":["null","string"]},"cardsLink":{"type":["null","string"]},"scenarioCount":{"type":"number"},"investigatorCount":{"type":"number"},"authors":{"type":"array","items":{"type":"string"}},"statuses":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"type":"string"}},"created":{"type":"string"},"updated":{"type":"string"},"hash":{"type":"string"},"hidden":{"type":"boolean"}},"required":["authors","created","description","hash","investigatorCount","name","options","projectIds","scenarioCount","statuses","tags","updated","version"]},"Option_2":{"type":"object","properties":{"name":{"type":"string"},"parts":{"type":"array","items":{"$ref":"#/definitions/Part_3"}}},"required":["name","parts"]},"Part_3":{"type":"object","properties":{"enabled":{"type":"boolean"},"code":{"type":"string"},"name":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}}},"required":["cards","code","name"]},"Project_5":{"type":"object","properties":{"version":{"type":"number","const":3},"code":{"type":"string"},"options":{"type":"array","items":{"$ref":"#/definitions/Option_3"}},"projectId":{"type":"array","items":{"type":"string"}},"name":{"type":"string"},"description":{"type":"string"},"artist":{"type":["null","string"]},"info":{"type":["null","string"]},"website":{"type":["null","string"]},"cardsLink":{"type":["null","string"]},"scenarioCount":{"type":"number"},"investigatorCount":{"type":"number"},"authors":{"type":"array","items":{"type":"string"}},"statuses":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"type":"string"}},"created":{"type":"string"},"updated":{"type":"string"},"hash":{"type":"string"}},"required":["authors","code","created","description","hash","investigatorCount","name","options","projectId","scenarioCount","statuses","tags","updated","version"]},"Option_3":{"type":"object","properties":{"name":{"type":"string"},"parts":{"type":"array","items":{"$ref":"#/definitions/Part"}}},"required":["name","parts"]}},"$schema":"http://json-schema.org/draft-07/schema#"};const schema12 = {"type":"object","properties":{"version":{"type":"number","const":1},"code":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}},"projectId":{"type":"array","items":{"type":"string"}},"name":{"type":"string"},"description":{"type":"string"},"artist":{"type":["null","string"]},"info":{"type":["null","string"]},"website":{"type":["null","string"]},"cardsLink":{"type":["null","string"]},"scenarioCount":{"type":"number"},"investigatorCount":{"type":"number"},"authors":{"type":"array","items":{"type":"string"}},"statuses":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"type":"string"}},"created":{"type":"string"},"updated":{"type":"string"},"hash":{"type":"string"}},"required":["authors","cards","code","created","description","hash","investigatorCount","name","projectId","scenarioCount","statuses","tags","updated","version"]};const schema13 = {"type":"object","properties":{"count":{"type":"number"},"front":{"$ref":"#/definitions/CardFace"},"back":{"$ref":"#/definitions/CardFace"}},"required":["count"]};const schema14 = {"type":"object","properties":{"Name":{"type":"string"},"ID":{"type":"string"},"SourceID":{"type":"string"},"Exp":{"type":"string"},"Width":{"type":"number"},"Height":{"type":"number"}},"required":["Exp","Height","ID","Name","SourceID","Width"]};function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.count === undefined) && (missing0 = "count")){validate12.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.count !== undefined){let data0 = data.count;const _errs1 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){validate12.errors = [{instancePath:instancePath+"/count",schemaPath:"#/properties/count/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.front !== undefined){let data1 = data.front;const _errs3 = errors;const _errs4 = errors;if(errors === _errs4){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;if(((((((data1.Exp === undefined) && (missing1 = "Exp")) || ((data1.Height === undefined) && (missing1 = "Height"))) || ((data1.ID === undefined) && (missing1 = "ID"))) || ((data1.Name === undefined) && (missing1 = "Name"))) || ((data1.SourceID === undefined) && (missing1 = "SourceID"))) || ((data1.Width === undefined) && (missing1 = "Width"))){validate12.errors = [{instancePath:instancePath+"/front",schemaPath:"#/definitions/CardFace/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data1.Name !== undefined){const _errs6 = errors;if(typeof data1.Name !== "string"){validate12.errors = [{instancePath:instancePath+"/front/Name",schemaPath:"#/definitions/CardFace/properties/Name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data1.ID !== undefined){const _errs8 = errors;if(typeof data1.ID !== "string"){validate12.errors = [{instancePath:instancePath+"/front/ID",schemaPath:"#/definitions/CardFace/properties/ID/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data1.SourceID !== undefined){const _errs10 = errors;if(typeof data1.SourceID !== "string"){validate12.errors = [{instancePath:instancePath+"/front/SourceID",schemaPath:"#/definitions/CardFace/properties/SourceID/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data1.Exp !== undefined){const _errs12 = errors;if(typeof data1.Exp !== "string"){validate12.errors = [{instancePath:instancePath+"/front/Exp",schemaPath:"#/definitions/CardFace/properties/Exp/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data1.Width !== undefined){let data6 = data1.Width;const _errs14 = errors;if(!((typeof data6 == "number") && (isFinite(data6)))){validate12.errors = [{instancePath:instancePath+"/front/Width",schemaPath:"#/definitions/CardFace/properties/Width/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data1.Height !== undefined){let data7 = data1.Height;const _errs16 = errors;if(!((typeof data7 == "number") && (isFinite(data7)))){validate12.errors = [{instancePath:instancePath+"/front/Height",schemaPath:"#/definitions/CardFace/properties/Height/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}}}}}}}}else {validate12.errors = [{instancePath:instancePath+"/front",schemaPath:"#/definitions/CardFace/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.back !== undefined){let data8 = data.back;const _errs18 = errors;const _errs19 = errors;if(errors === _errs19){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){let missing2;if(((((((data8.Exp === undefined) && (missing2 = "Exp")) || ((data8.Height === undefined) && (missing2 = "Height"))) || ((data8.ID === undefined) && (missing2 = "ID"))) || ((data8.Name === undefined) && (missing2 = "Name"))) || ((data8.SourceID === undefined) && (missing2 = "SourceID"))) || ((data8.Width === undefined) && (missing2 = "Width"))){validate12.errors = [{instancePath:instancePath+"/back",schemaPath:"#/definitions/CardFace/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {if(data8.Name !== undefined){const _errs21 = errors;if(typeof data8.Name !== "string"){validate12.errors = [{instancePath:instancePath+"/back/Name",schemaPath:"#/definitions/CardFace/properties/Name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs21 === errors;}else {var valid4 = true;}if(valid4){if(data8.ID !== undefined){const _errs23 = errors;if(typeof data8.ID !== "string"){validate12.errors = [{instancePath:instancePath+"/back/ID",schemaPath:"#/definitions/CardFace/properties/ID/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs23 === errors;}else {var valid4 = true;}if(valid4){if(data8.SourceID !== undefined){const _errs25 = errors;if(typeof data8.SourceID !== "string"){validate12.errors = [{instancePath:instancePath+"/back/SourceID",schemaPath:"#/definitions/CardFace/properties/SourceID/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs25 === errors;}else {var valid4 = true;}if(valid4){if(data8.Exp !== undefined){const _errs27 = errors;if(typeof data8.Exp !== "string"){validate12.errors = [{instancePath:instancePath+"/back/Exp",schemaPath:"#/definitions/CardFace/properties/Exp/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs27 === errors;}else {var valid4 = true;}if(valid4){if(data8.Width !== undefined){let data13 = data8.Width;const _errs29 = errors;if(!((typeof data13 == "number") && (isFinite(data13)))){validate12.errors = [{instancePath:instancePath+"/back/Width",schemaPath:"#/definitions/CardFace/properties/Width/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs29 === errors;}else {var valid4 = true;}if(valid4){if(data8.Height !== undefined){let data14 = data8.Height;const _errs31 = errors;if(!((typeof data14 == "number") && (isFinite(data14)))){validate12.errors = [{instancePath:instancePath+"/back/Height",schemaPath:"#/definitions/CardFace/properties/Height/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid4 = _errs31 === errors;}else {var valid4 = true;}}}}}}}}else {validate12.errors = [{instancePath:instancePath+"/back",schemaPath:"#/definitions/CardFace/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs18 === errors;}else {var valid0 = true;}}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((((((((((((data.authors === undefined) && (missing0 = "authors")) || ((data.cards === undefined) && (missing0 = "cards"))) || ((data.code === undefined) && (missing0 = "code"))) || ((data.created === undefined) && (missing0 = "created"))) || ((data.description === undefined) && (missing0 = "description"))) || ((data.hash === undefined) && (missing0 = "hash"))) || ((data.investigatorCount === undefined) && (missing0 = "investigatorCount"))) || ((data.name === undefined) && (missing0 = "name"))) || ((data.projectId === undefined) && (missing0 = "projectId"))) || ((data.scenarioCount === undefined) && (missing0 = "scenarioCount"))) || ((data.statuses === undefined) && (missing0 = "statuses"))) || ((data.tags === undefined) && (missing0 = "tags"))) || ((data.updated === undefined) && (missing0 = "updated"))) || ((data.version === undefined) && (missing0 = "version"))){validate11.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.version !== undefined){let data0 = data.version;const _errs1 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){validate11.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}if(1 !== data0){validate11.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/const",keyword:"const",params:{allowedValue: 1},message:"must be equal to constant"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.code !== undefined){const _errs3 = errors;if(typeof data.code !== "string"){validate11.errors = [{instancePath:instancePath+"/code",schemaPath:"#/properties/code/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.cards !== undefined){let data2 = data.cards;const _errs5 = errors;if(errors === _errs5){if(Array.isArray(data2)){var valid1 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){const _errs7 = errors;if(!(validate12(data2[i0], {instancePath:instancePath+"/cards/" + i0,parentData:data2,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid1 = _errs7 === errors;if(!valid1){break;}}}else {validate11.errors = [{instancePath:instancePath+"/cards",schemaPath:"#/properties/cards/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.projectId !== undefined){let data4 = data.projectId;const _errs8 = errors;if(errors === _errs8){if(Array.isArray(data4)){var valid2 = true;const len1 = data4.length;for(let i1=0; i1<len1; i1++){const _errs10 = errors;if(typeof data4[i1] !== "string"){validate11.errors = [{instancePath:instancePath+"/projectId/" + i1,schemaPath:"#/properties/projectId/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;if(!valid2){break;}}}else {validate11.errors = [{instancePath:instancePath+"/projectId",schemaPath:"#/properties/projectId/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs12 = errors;if(typeof data.name !== "string"){validate11.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs14 = errors;if(typeof data.description !== "string"){validate11.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.artist !== undefined){let data8 = data.artist;const _errs16 = errors;if((data8 !== null) && (typeof data8 !== "string")){validate11.errors = [{instancePath:instancePath+"/artist",schemaPath:"#/properties/artist/type",keyword:"type",params:{type: schema12.properties.artist.type},message:"must be null,string"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.info !== undefined){let data9 = data.info;const _errs18 = errors;if((data9 !== null) && (typeof data9 !== "string")){validate11.errors = [{instancePath:instancePath+"/info",schemaPath:"#/properties/info/type",keyword:"type",params:{type: schema12.properties.info.type},message:"must be null,string"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.website !== undefined){let data10 = data.website;const _errs20 = errors;if((data10 !== null) && (typeof data10 !== "string")){validate11.errors = [{instancePath:instancePath+"/website",schemaPath:"#/properties/website/type",keyword:"type",params:{type: schema12.properties.website.type},message:"must be null,string"}];return false;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.cardsLink !== undefined){let data11 = data.cardsLink;const _errs22 = errors;if((data11 !== null) && (typeof data11 !== "string")){validate11.errors = [{instancePath:instancePath+"/cardsLink",schemaPath:"#/properties/cardsLink/type",keyword:"type",params:{type: schema12.properties.cardsLink.type},message:"must be null,string"}];return false;}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.scenarioCount !== undefined){let data12 = data.scenarioCount;const _errs24 = errors;if(!((typeof data12 == "number") && (isFinite(data12)))){validate11.errors = [{instancePath:instancePath+"/scenarioCount",schemaPath:"#/properties/scenarioCount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.investigatorCount !== undefined){let data13 = data.investigatorCount;const _errs26 = errors;if(!((typeof data13 == "number") && (isFinite(data13)))){validate11.errors = [{instancePath:instancePath+"/investigatorCount",schemaPath:"#/properties/investigatorCount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.authors !== undefined){let data14 = data.authors;const _errs28 = errors;if(errors === _errs28){if(Array.isArray(data14)){var valid3 = true;const len2 = data14.length;for(let i2=0; i2<len2; i2++){const _errs30 = errors;if(typeof data14[i2] !== "string"){validate11.errors = [{instancePath:instancePath+"/authors/" + i2,schemaPath:"#/properties/authors/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs30 === errors;if(!valid3){break;}}}else {validate11.errors = [{instancePath:instancePath+"/authors",schemaPath:"#/properties/authors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.statuses !== undefined){let data16 = data.statuses;const _errs32 = errors;if(errors === _errs32){if(Array.isArray(data16)){var valid4 = true;const len3 = data16.length;for(let i3=0; i3<len3; i3++){const _errs34 = errors;if(typeof data16[i3] !== "string"){validate11.errors = [{instancePath:instancePath+"/statuses/" + i3,schemaPath:"#/properties/statuses/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs34 === errors;if(!valid4){break;}}}else {validate11.errors = [{instancePath:instancePath+"/statuses",schemaPath:"#/properties/statuses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs32 === errors;}else {var valid0 = true;}if(valid0){if(data.tags !== undefined){let data18 = data.tags;const _errs36 = errors;if(errors === _errs36){if(Array.isArray(data18)){var valid5 = true;const len4 = data18.length;for(let i4=0; i4<len4; i4++){const _errs38 = errors;if(typeof data18[i4] !== "string"){validate11.errors = [{instancePath:instancePath+"/tags/" + i4,schemaPath:"#/properties/tags/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs38 === errors;if(!valid5){break;}}}else {validate11.errors = [{instancePath:instancePath+"/tags",schemaPath:"#/properties/tags/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs36 === errors;}else {var valid0 = true;}if(valid0){if(data.created !== undefined){const _errs40 = errors;if(typeof data.created !== "string"){validate11.errors = [{instancePath:instancePath+"/created",schemaPath:"#/properties/created/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs40 === errors;}else {var valid0 = true;}if(valid0){if(data.updated !== undefined){const _errs42 = errors;if(typeof data.updated !== "string"){validate11.errors = [{instancePath:instancePath+"/updated",schemaPath:"#/properties/updated/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs42 === errors;}else {var valid0 = true;}if(valid0){if(data.hash !== undefined){const _errs44 = errors;if(typeof data.hash !== "string"){validate11.errors = [{instancePath:instancePath+"/hash",schemaPath:"#/properties/hash/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs44 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}const schema16 = {"type":"object","properties":{"version":{"type":"number","const":2},"code":{"type":"string"},"parts":{"type":"array","items":{"$ref":"#/definitions/Part"}},"projectId":{"type":"array","items":{"type":"string"}},"name":{"type":"string"},"description":{"type":"string"},"artist":{"type":["null","string"]},"info":{"type":["null","string"]},"website":{"type":["null","string"]},"cardsLink":{"type":["null","string"]},"scenarioCount":{"type":"number"},"investigatorCount":{"type":"number"},"authors":{"type":"array","items":{"type":"string"}},"statuses":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"type":"string"}},"created":{"type":"string"},"updated":{"type":"string"},"hash":{"type":"string"}},"required":["authors","code","created","description","hash","investigatorCount","name","parts","projectId","scenarioCount","statuses","tags","updated","version"]};const schema17 = {"type":"object","properties":{"enabled":{"type":"boolean"},"name":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}}},"required":["cards","name"]};function validate16(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.cards === undefined) && (missing0 = "cards")) || ((data.name === undefined) && (missing0 = "name"))){validate16.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.enabled !== undefined){const _errs1 = errors;if(typeof data.enabled !== "boolean"){validate16.errors = [{instancePath:instancePath+"/enabled",schemaPath:"#/properties/enabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs3 = errors;if(typeof data.name !== "string"){validate16.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.cards !== undefined){let data2 = data.cards;const _errs5 = errors;if(errors === _errs5){if(Array.isArray(data2)){var valid1 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){const _errs7 = errors;if(!(validate12(data2[i0], {instancePath:instancePath+"/cards/" + i0,parentData:data2,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid1 = _errs7 === errors;if(!valid1){break;}}}else {validate16.errors = [{instancePath:instancePath+"/cards",schemaPath:"#/properties/cards/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}}else {validate16.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate16.errors = vErrors;return errors === 0;}function validate15(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((((((((((((data.authors === undefined) && (missing0 = "authors")) || ((data.code === undefined) && (missing0 = "code"))) || ((data.created === undefined) && (missing0 = "created"))) || ((data.description === undefined) && (missing0 = "description"))) || ((data.hash === undefined) && (missing0 = "hash"))) || ((data.investigatorCount === undefined) && (missing0 = "investigatorCount"))) || ((data.name === undefined) && (missing0 = "name"))) || ((data.parts === undefined) && (missing0 = "parts"))) || ((data.projectId === undefined) && (missing0 = "projectId"))) || ((data.scenarioCount === undefined) && (missing0 = "scenarioCount"))) || ((data.statuses === undefined) && (missing0 = "statuses"))) || ((data.tags === undefined) && (missing0 = "tags"))) || ((data.updated === undefined) && (missing0 = "updated"))) || ((data.version === undefined) && (missing0 = "version"))){validate15.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.version !== undefined){let data0 = data.version;const _errs1 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){validate15.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}if(2 !== data0){validate15.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/const",keyword:"const",params:{allowedValue: 2},message:"must be equal to constant"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.code !== undefined){const _errs3 = errors;if(typeof data.code !== "string"){validate15.errors = [{instancePath:instancePath+"/code",schemaPath:"#/properties/code/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.parts !== undefined){let data2 = data.parts;const _errs5 = errors;if(errors === _errs5){if(Array.isArray(data2)){var valid1 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){const _errs7 = errors;if(!(validate16(data2[i0], {instancePath:instancePath+"/parts/" + i0,parentData:data2,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate16.errors : vErrors.concat(validate16.errors);errors = vErrors.length;}var valid1 = _errs7 === errors;if(!valid1){break;}}}else {validate15.errors = [{instancePath:instancePath+"/parts",schemaPath:"#/properties/parts/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.projectId !== undefined){let data4 = data.projectId;const _errs8 = errors;if(errors === _errs8){if(Array.isArray(data4)){var valid2 = true;const len1 = data4.length;for(let i1=0; i1<len1; i1++){const _errs10 = errors;if(typeof data4[i1] !== "string"){validate15.errors = [{instancePath:instancePath+"/projectId/" + i1,schemaPath:"#/properties/projectId/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;if(!valid2){break;}}}else {validate15.errors = [{instancePath:instancePath+"/projectId",schemaPath:"#/properties/projectId/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs12 = errors;if(typeof data.name !== "string"){validate15.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs14 = errors;if(typeof data.description !== "string"){validate15.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.artist !== undefined){let data8 = data.artist;const _errs16 = errors;if((data8 !== null) && (typeof data8 !== "string")){validate15.errors = [{instancePath:instancePath+"/artist",schemaPath:"#/properties/artist/type",keyword:"type",params:{type: schema16.properties.artist.type},message:"must be null,string"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.info !== undefined){let data9 = data.info;const _errs18 = errors;if((data9 !== null) && (typeof data9 !== "string")){validate15.errors = [{instancePath:instancePath+"/info",schemaPath:"#/properties/info/type",keyword:"type",params:{type: schema16.properties.info.type},message:"must be null,string"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.website !== undefined){let data10 = data.website;const _errs20 = errors;if((data10 !== null) && (typeof data10 !== "string")){validate15.errors = [{instancePath:instancePath+"/website",schemaPath:"#/properties/website/type",keyword:"type",params:{type: schema16.properties.website.type},message:"must be null,string"}];return false;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.cardsLink !== undefined){let data11 = data.cardsLink;const _errs22 = errors;if((data11 !== null) && (typeof data11 !== "string")){validate15.errors = [{instancePath:instancePath+"/cardsLink",schemaPath:"#/properties/cardsLink/type",keyword:"type",params:{type: schema16.properties.cardsLink.type},message:"must be null,string"}];return false;}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.scenarioCount !== undefined){let data12 = data.scenarioCount;const _errs24 = errors;if(!((typeof data12 == "number") && (isFinite(data12)))){validate15.errors = [{instancePath:instancePath+"/scenarioCount",schemaPath:"#/properties/scenarioCount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.investigatorCount !== undefined){let data13 = data.investigatorCount;const _errs26 = errors;if(!((typeof data13 == "number") && (isFinite(data13)))){validate15.errors = [{instancePath:instancePath+"/investigatorCount",schemaPath:"#/properties/investigatorCount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.authors !== undefined){let data14 = data.authors;const _errs28 = errors;if(errors === _errs28){if(Array.isArray(data14)){var valid3 = true;const len2 = data14.length;for(let i2=0; i2<len2; i2++){const _errs30 = errors;if(typeof data14[i2] !== "string"){validate15.errors = [{instancePath:instancePath+"/authors/" + i2,schemaPath:"#/properties/authors/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs30 === errors;if(!valid3){break;}}}else {validate15.errors = [{instancePath:instancePath+"/authors",schemaPath:"#/properties/authors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.statuses !== undefined){let data16 = data.statuses;const _errs32 = errors;if(errors === _errs32){if(Array.isArray(data16)){var valid4 = true;const len3 = data16.length;for(let i3=0; i3<len3; i3++){const _errs34 = errors;if(typeof data16[i3] !== "string"){validate15.errors = [{instancePath:instancePath+"/statuses/" + i3,schemaPath:"#/properties/statuses/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs34 === errors;if(!valid4){break;}}}else {validate15.errors = [{instancePath:instancePath+"/statuses",schemaPath:"#/properties/statuses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs32 === errors;}else {var valid0 = true;}if(valid0){if(data.tags !== undefined){let data18 = data.tags;const _errs36 = errors;if(errors === _errs36){if(Array.isArray(data18)){var valid5 = true;const len4 = data18.length;for(let i4=0; i4<len4; i4++){const _errs38 = errors;if(typeof data18[i4] !== "string"){validate15.errors = [{instancePath:instancePath+"/tags/" + i4,schemaPath:"#/properties/tags/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs38 === errors;if(!valid5){break;}}}else {validate15.errors = [{instancePath:instancePath+"/tags",schemaPath:"#/properties/tags/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs36 === errors;}else {var valid0 = true;}if(valid0){if(data.created !== undefined){const _errs40 = errors;if(typeof data.created !== "string"){validate15.errors = [{instancePath:instancePath+"/created",schemaPath:"#/properties/created/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs40 === errors;}else {var valid0 = true;}if(valid0){if(data.updated !== undefined){const _errs42 = errors;if(typeof data.updated !== "string"){validate15.errors = [{instancePath:instancePath+"/updated",schemaPath:"#/properties/updated/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs42 === errors;}else {var valid0 = true;}if(valid0){if(data.hash !== undefined){const _errs44 = errors;if(typeof data.hash !== "string"){validate15.errors = [{instancePath:instancePath+"/hash",schemaPath:"#/properties/hash/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs44 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}else {validate15.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate15.errors = vErrors;return errors === 0;}const schema18 = {"type":"object","properties":{"version":{"type":"number","const":4},"options":{"type":"array","items":{"$ref":"#/definitions/Option"}},"projectId":{"type":"array","items":{"type":"string"}},"name":{"type":"string"},"description":{"type":"string"},"artist":{"type":["null","string"]},"info":{"type":["null","string"]},"website":{"type":["null","string"]},"cardsLink":{"type":["null","string"]},"scenarioCount":{"type":"number"},"investigatorCount":{"type":"number"},"authors":{"type":"array","items":{"type":"string"}},"statuses":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"type":"string"}},"created":{"type":"string"},"updated":{"type":"string"},"hash":{"type":"string"}},"required":["authors","created","description","hash","investigatorCount","name","options","projectId","scenarioCount","statuses","tags","updated","version"]};const schema19 = {"type":"object","properties":{"name":{"type":"string"},"parts":{"type":"array","items":{"$ref":"#/definitions/Part_1"}}},"required":["name","parts"]};const schema20 = {"type":"object","properties":{"enabled":{"type":"boolean"},"code":{"type":"string"},"name":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}}},"required":["cards","code","name"]};function validate22(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.cards === undefined) && (missing0 = "cards")) || ((data.code === undefined) && (missing0 = "code"))) || ((data.name === undefined) && (missing0 = "name"))){validate22.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.enabled !== undefined){const _errs1 = errors;if(typeof data.enabled !== "boolean"){validate22.errors = [{instancePath:instancePath+"/enabled",schemaPath:"#/properties/enabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.code !== undefined){const _errs3 = errors;if(typeof data.code !== "string"){validate22.errors = [{instancePath:instancePath+"/code",schemaPath:"#/properties/code/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs5 = errors;if(typeof data.name !== "string"){validate22.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.cards !== undefined){let data3 = data.cards;const _errs7 = errors;if(errors === _errs7){if(Array.isArray(data3)){var valid1 = true;const len0 = data3.length;for(let i0=0; i0<len0; i0++){const _errs9 = errors;if(!(validate12(data3[i0], {instancePath:instancePath+"/cards/" + i0,parentData:data3,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid1 = _errs9 === errors;if(!valid1){break;}}}else {validate22.errors = [{instancePath:instancePath+"/cards",schemaPath:"#/properties/cards/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}}}}}}else {validate22.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate22.errors = vErrors;return errors === 0;}function validate21(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.name === undefined) && (missing0 = "name")) || ((data.parts === undefined) && (missing0 = "parts"))){validate21.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.name !== undefined){const _errs1 = errors;if(typeof data.name !== "string"){validate21.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.parts !== undefined){let data1 = data.parts;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs5 = errors;if(!(validate22(data1[i0], {instancePath:instancePath+"/parts/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate22.errors : vErrors.concat(validate22.errors);errors = vErrors.length;}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate21.errors = [{instancePath:instancePath+"/parts",schemaPath:"#/properties/parts/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}}else {validate21.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate21.errors = vErrors;return errors === 0;}function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((((((((((((data.authors === undefined) && (missing0 = "authors")) || ((data.created === undefined) && (missing0 = "created"))) || ((data.description === undefined) && (missing0 = "description"))) || ((data.hash === undefined) && (missing0 = "hash"))) || ((data.investigatorCount === undefined) && (missing0 = "investigatorCount"))) || ((data.name === undefined) && (missing0 = "name"))) || ((data.options === undefined) && (missing0 = "options"))) || ((data.projectId === undefined) && (missing0 = "projectId"))) || ((data.scenarioCount === undefined) && (missing0 = "scenarioCount"))) || ((data.statuses === undefined) && (missing0 = "statuses"))) || ((data.tags === undefined) && (missing0 = "tags"))) || ((data.updated === undefined) && (missing0 = "updated"))) || ((data.version === undefined) && (missing0 = "version"))){validate20.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.version !== undefined){let data0 = data.version;const _errs1 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){validate20.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}if(4 !== data0){validate20.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/const",keyword:"const",params:{allowedValue: 4},message:"must be equal to constant"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.options !== undefined){let data1 = data.options;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs5 = errors;if(!(validate21(data1[i0], {instancePath:instancePath+"/options/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate21.errors : vErrors.concat(validate21.errors);errors = vErrors.length;}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate20.errors = [{instancePath:instancePath+"/options",schemaPath:"#/properties/options/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.projectId !== undefined){let data3 = data.projectId;const _errs6 = errors;if(errors === _errs6){if(Array.isArray(data3)){var valid2 = true;const len1 = data3.length;for(let i1=0; i1<len1; i1++){const _errs8 = errors;if(typeof data3[i1] !== "string"){validate20.errors = [{instancePath:instancePath+"/projectId/" + i1,schemaPath:"#/properties/projectId/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;if(!valid2){break;}}}else {validate20.errors = [{instancePath:instancePath+"/projectId",schemaPath:"#/properties/projectId/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs10 = errors;if(typeof data.name !== "string"){validate20.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs12 = errors;if(typeof data.description !== "string"){validate20.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.artist !== undefined){let data7 = data.artist;const _errs14 = errors;if((data7 !== null) && (typeof data7 !== "string")){validate20.errors = [{instancePath:instancePath+"/artist",schemaPath:"#/properties/artist/type",keyword:"type",params:{type: schema18.properties.artist.type},message:"must be null,string"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.info !== undefined){let data8 = data.info;const _errs16 = errors;if((data8 !== null) && (typeof data8 !== "string")){validate20.errors = [{instancePath:instancePath+"/info",schemaPath:"#/properties/info/type",keyword:"type",params:{type: schema18.properties.info.type},message:"must be null,string"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.website !== undefined){let data9 = data.website;const _errs18 = errors;if((data9 !== null) && (typeof data9 !== "string")){validate20.errors = [{instancePath:instancePath+"/website",schemaPath:"#/properties/website/type",keyword:"type",params:{type: schema18.properties.website.type},message:"must be null,string"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.cardsLink !== undefined){let data10 = data.cardsLink;const _errs20 = errors;if((data10 !== null) && (typeof data10 !== "string")){validate20.errors = [{instancePath:instancePath+"/cardsLink",schemaPath:"#/properties/cardsLink/type",keyword:"type",params:{type: schema18.properties.cardsLink.type},message:"must be null,string"}];return false;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.scenarioCount !== undefined){let data11 = data.scenarioCount;const _errs22 = errors;if(!((typeof data11 == "number") && (isFinite(data11)))){validate20.errors = [{instancePath:instancePath+"/scenarioCount",schemaPath:"#/properties/scenarioCount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.investigatorCount !== undefined){let data12 = data.investigatorCount;const _errs24 = errors;if(!((typeof data12 == "number") && (isFinite(data12)))){validate20.errors = [{instancePath:instancePath+"/investigatorCount",schemaPath:"#/properties/investigatorCount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.authors !== undefined){let data13 = data.authors;const _errs26 = errors;if(errors === _errs26){if(Array.isArray(data13)){var valid3 = true;const len2 = data13.length;for(let i2=0; i2<len2; i2++){const _errs28 = errors;if(typeof data13[i2] !== "string"){validate20.errors = [{instancePath:instancePath+"/authors/" + i2,schemaPath:"#/properties/authors/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs28 === errors;if(!valid3){break;}}}else {validate20.errors = [{instancePath:instancePath+"/authors",schemaPath:"#/properties/authors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.statuses !== undefined){let data15 = data.statuses;const _errs30 = errors;if(errors === _errs30){if(Array.isArray(data15)){var valid4 = true;const len3 = data15.length;for(let i3=0; i3<len3; i3++){const _errs32 = errors;if(typeof data15[i3] !== "string"){validate20.errors = [{instancePath:instancePath+"/statuses/" + i3,schemaPath:"#/properties/statuses/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs32 === errors;if(!valid4){break;}}}else {validate20.errors = [{instancePath:instancePath+"/statuses",schemaPath:"#/properties/statuses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.tags !== undefined){let data17 = data.tags;const _errs34 = errors;if(errors === _errs34){if(Array.isArray(data17)){var valid5 = true;const len4 = data17.length;for(let i4=0; i4<len4; i4++){const _errs36 = errors;if(typeof data17[i4] !== "string"){validate20.errors = [{instancePath:instancePath+"/tags/" + i4,schemaPath:"#/properties/tags/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs36 === errors;if(!valid5){break;}}}else {validate20.errors = [{instancePath:instancePath+"/tags",schemaPath:"#/properties/tags/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs34 === errors;}else {var valid0 = true;}if(valid0){if(data.created !== undefined){const _errs38 = errors;if(typeof data.created !== "string"){validate20.errors = [{instancePath:instancePath+"/created",schemaPath:"#/properties/created/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs38 === errors;}else {var valid0 = true;}if(valid0){if(data.updated !== undefined){const _errs40 = errors;if(typeof data.updated !== "string"){validate20.errors = [{instancePath:instancePath+"/updated",schemaPath:"#/properties/updated/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs40 === errors;}else {var valid0 = true;}if(valid0){if(data.hash !== undefined){const _errs42 = errors;if(typeof data.hash !== "string"){validate20.errors = [{instancePath:instancePath+"/hash",schemaPath:"#/properties/hash/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs42 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}const schema21 = {"type":"object","properties":{"version":{"type":"number","const":6},"options":{"type":"array","items":{"$ref":"#/definitions/Option_1"}},"projectIds":{"type":"object","additionalProperties":{"type":"string"}},"name":{"type":"string"},"description":{"type":"string"},"artist":{"type":["null","string"]},"info":{"type":["null","string"]},"website":{"type":["null","string"]},"cardsLink":{"type":["null","string"]},"scenarioCount":{"type":"number"},"investigatorCount":{"type":"number"},"authors":{"type":"array","items":{"type":"string"}},"statuses":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"type":"string"}},"created":{"type":"string"},"updated":{"type":"string"},"hash":{"type":"string"},"hidden":{"type":"boolean"}},"required":["authors","created","description","hash","investigatorCount","name","options","projectIds","scenarioCount","statuses","tags","updated","version"]};const schema22 = {"type":"object","properties":{"name":{"type":"string"},"parts":{"type":"array","items":{"$ref":"#/definitions/Part_2"}}},"required":["name","parts"]};const schema23 = {"type":"object","properties":{"enabled":{"type":"boolean"},"size":{"type":"string"},"code":{"type":"string"},"name":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}}},"required":["cards","code","name","size"]};function validate29(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((data.cards === undefined) && (missing0 = "cards")) || ((data.code === undefined) && (missing0 = "code"))) || ((data.name === undefined) && (missing0 = "name"))) || ((data.size === undefined) && (missing0 = "size"))){validate29.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.enabled !== undefined){const _errs1 = errors;if(typeof data.enabled !== "boolean"){validate29.errors = [{instancePath:instancePath+"/enabled",schemaPath:"#/properties/enabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.size !== undefined){const _errs3 = errors;if(typeof data.size !== "string"){validate29.errors = [{instancePath:instancePath+"/size",schemaPath:"#/properties/size/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.code !== undefined){const _errs5 = errors;if(typeof data.code !== "string"){validate29.errors = [{instancePath:instancePath+"/code",schemaPath:"#/properties/code/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs7 = errors;if(typeof data.name !== "string"){validate29.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.cards !== undefined){let data4 = data.cards;const _errs9 = errors;if(errors === _errs9){if(Array.isArray(data4)){var valid1 = true;const len0 = data4.length;for(let i0=0; i0<len0; i0++){const _errs11 = errors;if(!(validate12(data4[i0], {instancePath:instancePath+"/cards/" + i0,parentData:data4,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid1 = _errs11 === errors;if(!valid1){break;}}}else {validate29.errors = [{instancePath:instancePath+"/cards",schemaPath:"#/properties/cards/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs9 === errors;}else {var valid0 = true;}}}}}}}else {validate29.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate29.errors = vErrors;return errors === 0;}function validate28(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.name === undefined) && (missing0 = "name")) || ((data.parts === undefined) && (missing0 = "parts"))){validate28.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.name !== undefined){const _errs1 = errors;if(typeof data.name !== "string"){validate28.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.parts !== undefined){let data1 = data.parts;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs5 = errors;if(!(validate29(data1[i0], {instancePath:instancePath+"/parts/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate29.errors : vErrors.concat(validate29.errors);errors = vErrors.length;}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate28.errors = [{instancePath:instancePath+"/parts",schemaPath:"#/properties/parts/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}}else {validate28.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate28.errors = vErrors;return errors === 0;}function validate27(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((((((((((((data.authors === undefined) && (missing0 = "authors")) || ((data.created === undefined) && (missing0 = "created"))) || ((data.description === undefined) && (missing0 = "description"))) || ((data.hash === undefined) && (missing0 = "hash"))) || ((data.investigatorCount === undefined) && (missing0 = "investigatorCount"))) || ((data.name === undefined) && (missing0 = "name"))) || ((data.options === undefined) && (missing0 = "options"))) || ((data.projectIds === undefined) && (missing0 = "projectIds"))) || ((data.scenarioCount === undefined) && (missing0 = "scenarioCount"))) || ((data.statuses === undefined) && (missing0 = "statuses"))) || ((data.tags === undefined) && (missing0 = "tags"))) || ((data.updated === undefined) && (missing0 = "updated"))) || ((data.version === undefined) && (missing0 = "version"))){validate27.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.version !== undefined){let data0 = data.version;const _errs1 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){validate27.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}if(6 !== data0){validate27.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/const",keyword:"const",params:{allowedValue: 6},message:"must be equal to constant"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.options !== undefined){let data1 = data.options;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs5 = errors;if(!(validate28(data1[i0], {instancePath:instancePath+"/options/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate28.errors : vErrors.concat(validate28.errors);errors = vErrors.length;}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate27.errors = [{instancePath:instancePath+"/options",schemaPath:"#/properties/options/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.projectIds !== undefined){let data3 = data.projectIds;const _errs6 = errors;if(errors === _errs6){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){for(const key0 in data3){const _errs9 = errors;if(typeof data3[key0] !== "string"){validate27.errors = [{instancePath:instancePath+"/projectIds/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/properties/projectIds/additionalProperties/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs9 === errors;if(!valid2){break;}}}else {validate27.errors = [{instancePath:instancePath+"/projectIds",schemaPath:"#/properties/projectIds/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs11 = errors;if(typeof data.name !== "string"){validate27.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs13 = errors;if(typeof data.description !== "string"){validate27.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.artist !== undefined){let data7 = data.artist;const _errs15 = errors;if((data7 !== null) && (typeof data7 !== "string")){validate27.errors = [{instancePath:instancePath+"/artist",schemaPath:"#/properties/artist/type",keyword:"type",params:{type: schema21.properties.artist.type},message:"must be null,string"}];return false;}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.info !== undefined){let data8 = data.info;const _errs17 = errors;if((data8 !== null) && (typeof data8 !== "string")){validate27.errors = [{instancePath:instancePath+"/info",schemaPath:"#/properties/info/type",keyword:"type",params:{type: schema21.properties.info.type},message:"must be null,string"}];return false;}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.website !== undefined){let data9 = data.website;const _errs19 = errors;if((data9 !== null) && (typeof data9 !== "string")){validate27.errors = [{instancePath:instancePath+"/website",schemaPath:"#/properties/website/type",keyword:"type",params:{type: schema21.properties.website.type},message:"must be null,string"}];return false;}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.cardsLink !== undefined){let data10 = data.cardsLink;const _errs21 = errors;if((data10 !== null) && (typeof data10 !== "string")){validate27.errors = [{instancePath:instancePath+"/cardsLink",schemaPath:"#/properties/cardsLink/type",keyword:"type",params:{type: schema21.properties.cardsLink.type},message:"must be null,string"}];return false;}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.scenarioCount !== undefined){let data11 = data.scenarioCount;const _errs23 = errors;if(!((typeof data11 == "number") && (isFinite(data11)))){validate27.errors = [{instancePath:instancePath+"/scenarioCount",schemaPath:"#/properties/scenarioCount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.investigatorCount !== undefined){let data12 = data.investigatorCount;const _errs25 = errors;if(!((typeof data12 == "number") && (isFinite(data12)))){validate27.errors = [{instancePath:instancePath+"/investigatorCount",schemaPath:"#/properties/investigatorCount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs25 === errors;}else {var valid0 = true;}if(valid0){if(data.authors !== undefined){let data13 = data.authors;const _errs27 = errors;if(errors === _errs27){if(Array.isArray(data13)){var valid3 = true;const len1 = data13.length;for(let i1=0; i1<len1; i1++){const _errs29 = errors;if(typeof data13[i1] !== "string"){validate27.errors = [{instancePath:instancePath+"/authors/" + i1,schemaPath:"#/properties/authors/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs29 === errors;if(!valid3){break;}}}else {validate27.errors = [{instancePath:instancePath+"/authors",schemaPath:"#/properties/authors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs27 === errors;}else {var valid0 = true;}if(valid0){if(data.statuses !== undefined){let data15 = data.statuses;const _errs31 = errors;if(errors === _errs31){if(Array.isArray(data15)){var valid4 = true;const len2 = data15.length;for(let i2=0; i2<len2; i2++){const _errs33 = errors;if(typeof data15[i2] !== "string"){validate27.errors = [{instancePath:instancePath+"/statuses/" + i2,schemaPath:"#/properties/statuses/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs33 === errors;if(!valid4){break;}}}else {validate27.errors = [{instancePath:instancePath+"/statuses",schemaPath:"#/properties/statuses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs31 === errors;}else {var valid0 = true;}if(valid0){if(data.tags !== undefined){let data17 = data.tags;const _errs35 = errors;if(errors === _errs35){if(Array.isArray(data17)){var valid5 = true;const len3 = data17.length;for(let i3=0; i3<len3; i3++){const _errs37 = errors;if(typeof data17[i3] !== "string"){validate27.errors = [{instancePath:instancePath+"/tags/" + i3,schemaPath:"#/properties/tags/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs37 === errors;if(!valid5){break;}}}else {validate27.errors = [{instancePath:instancePath+"/tags",schemaPath:"#/properties/tags/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs35 === errors;}else {var valid0 = true;}if(valid0){if(data.created !== undefined){const _errs39 = errors;if(typeof data.created !== "string"){validate27.errors = [{instancePath:instancePath+"/created",schemaPath:"#/properties/created/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs39 === errors;}else {var valid0 = true;}if(valid0){if(data.updated !== undefined){const _errs41 = errors;if(typeof data.updated !== "string"){validate27.errors = [{instancePath:instancePath+"/updated",schemaPath:"#/properties/updated/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs41 === errors;}else {var valid0 = true;}if(valid0){if(data.hash !== undefined){const _errs43 = errors;if(typeof data.hash !== "string"){validate27.errors = [{instancePath:instancePath+"/hash",schemaPath:"#/properties/hash/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs43 === errors;}else {var valid0 = true;}if(valid0){if(data.hidden !== undefined){const _errs45 = errors;if(typeof data.hidden !== "boolean"){validate27.errors = [{instancePath:instancePath+"/hidden",schemaPath:"#/properties/hidden/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs45 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}else {validate27.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate27.errors = vErrors;return errors === 0;}const schema24 = {"type":"object","properties":{"version":{"type":"number","const":5},"options":{"type":"array","items":{"$ref":"#/definitions/Option_2"}},"projectIds":{"type":"object","additionalProperties":{"type":"string"}},"name":{"type":"string"},"description":{"type":"string"},"artist":{"type":["null","string"]},"info":{"type":["null","string"]},"website":{"type":["null","string"]},"cardsLink":{"type":["null","string"]},"scenarioCount":{"type":"number"},"investigatorCount":{"type":"number"},"authors":{"type":"array","items":{"type":"string"}},"statuses":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"type":"string"}},"created":{"type":"string"},"updated":{"type":"string"},"hash":{"type":"string"},"hidden":{"type":"boolean"}},"required":["authors","created","description","hash","investigatorCount","name","options","projectIds","scenarioCount","statuses","tags","updated","version"]};const schema25 = {"type":"object","properties":{"name":{"type":"string"},"parts":{"type":"array","items":{"$ref":"#/definitions/Part_3"}}},"required":["name","parts"]};const schema26 = {"type":"object","properties":{"enabled":{"type":"boolean"},"code":{"type":"string"},"name":{"type":"string"},"cards":{"type":"array","items":{"$ref":"#/definitions/Card"}}},"required":["cards","code","name"]};function validate36(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.cards === undefined) && (missing0 = "cards")) || ((data.code === undefined) && (missing0 = "code"))) || ((data.name === undefined) && (missing0 = "name"))){validate36.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.enabled !== undefined){const _errs1 = errors;if(typeof data.enabled !== "boolean"){validate36.errors = [{instancePath:instancePath+"/enabled",schemaPath:"#/properties/enabled/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.code !== undefined){const _errs3 = errors;if(typeof data.code !== "string"){validate36.errors = [{instancePath:instancePath+"/code",schemaPath:"#/properties/code/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs5 = errors;if(typeof data.name !== "string"){validate36.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.cards !== undefined){let data3 = data.cards;const _errs7 = errors;if(errors === _errs7){if(Array.isArray(data3)){var valid1 = true;const len0 = data3.length;for(let i0=0; i0<len0; i0++){const _errs9 = errors;if(!(validate12(data3[i0], {instancePath:instancePath+"/cards/" + i0,parentData:data3,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid1 = _errs9 === errors;if(!valid1){break;}}}else {validate36.errors = [{instancePath:instancePath+"/cards",schemaPath:"#/properties/cards/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}}}}}}else {validate36.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate36.errors = vErrors;return errors === 0;}function validate35(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.name === undefined) && (missing0 = "name")) || ((data.parts === undefined) && (missing0 = "parts"))){validate35.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.name !== undefined){const _errs1 = errors;if(typeof data.name !== "string"){validate35.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.parts !== undefined){let data1 = data.parts;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs5 = errors;if(!(validate36(data1[i0], {instancePath:instancePath+"/parts/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate36.errors : vErrors.concat(validate36.errors);errors = vErrors.length;}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate35.errors = [{instancePath:instancePath+"/parts",schemaPath:"#/properties/parts/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}}else {validate35.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate35.errors = vErrors;return errors === 0;}function validate34(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((((((((((((data.authors === undefined) && (missing0 = "authors")) || ((data.created === undefined) && (missing0 = "created"))) || ((data.description === undefined) && (missing0 = "description"))) || ((data.hash === undefined) && (missing0 = "hash"))) || ((data.investigatorCount === undefined) && (missing0 = "investigatorCount"))) || ((data.name === undefined) && (missing0 = "name"))) || ((data.options === undefined) && (missing0 = "options"))) || ((data.projectIds === undefined) && (missing0 = "projectIds"))) || ((data.scenarioCount === undefined) && (missing0 = "scenarioCount"))) || ((data.statuses === undefined) && (missing0 = "statuses"))) || ((data.tags === undefined) && (missing0 = "tags"))) || ((data.updated === undefined) && (missing0 = "updated"))) || ((data.version === undefined) && (missing0 = "version"))){validate34.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.version !== undefined){let data0 = data.version;const _errs1 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){validate34.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}if(5 !== data0){validate34.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/const",keyword:"const",params:{allowedValue: 5},message:"must be equal to constant"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.options !== undefined){let data1 = data.options;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs5 = errors;if(!(validate35(data1[i0], {instancePath:instancePath+"/options/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate35.errors : vErrors.concat(validate35.errors);errors = vErrors.length;}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate34.errors = [{instancePath:instancePath+"/options",schemaPath:"#/properties/options/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.projectIds !== undefined){let data3 = data.projectIds;const _errs6 = errors;if(errors === _errs6){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){for(const key0 in data3){const _errs9 = errors;if(typeof data3[key0] !== "string"){validate34.errors = [{instancePath:instancePath+"/projectIds/" + key0.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/properties/projectIds/additionalProperties/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs9 === errors;if(!valid2){break;}}}else {validate34.errors = [{instancePath:instancePath+"/projectIds",schemaPath:"#/properties/projectIds/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs11 = errors;if(typeof data.name !== "string"){validate34.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs13 = errors;if(typeof data.description !== "string"){validate34.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.artist !== undefined){let data7 = data.artist;const _errs15 = errors;if((data7 !== null) && (typeof data7 !== "string")){validate34.errors = [{instancePath:instancePath+"/artist",schemaPath:"#/properties/artist/type",keyword:"type",params:{type: schema24.properties.artist.type},message:"must be null,string"}];return false;}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.info !== undefined){let data8 = data.info;const _errs17 = errors;if((data8 !== null) && (typeof data8 !== "string")){validate34.errors = [{instancePath:instancePath+"/info",schemaPath:"#/properties/info/type",keyword:"type",params:{type: schema24.properties.info.type},message:"must be null,string"}];return false;}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.website !== undefined){let data9 = data.website;const _errs19 = errors;if((data9 !== null) && (typeof data9 !== "string")){validate34.errors = [{instancePath:instancePath+"/website",schemaPath:"#/properties/website/type",keyword:"type",params:{type: schema24.properties.website.type},message:"must be null,string"}];return false;}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.cardsLink !== undefined){let data10 = data.cardsLink;const _errs21 = errors;if((data10 !== null) && (typeof data10 !== "string")){validate34.errors = [{instancePath:instancePath+"/cardsLink",schemaPath:"#/properties/cardsLink/type",keyword:"type",params:{type: schema24.properties.cardsLink.type},message:"must be null,string"}];return false;}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.scenarioCount !== undefined){let data11 = data.scenarioCount;const _errs23 = errors;if(!((typeof data11 == "number") && (isFinite(data11)))){validate34.errors = [{instancePath:instancePath+"/scenarioCount",schemaPath:"#/properties/scenarioCount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.investigatorCount !== undefined){let data12 = data.investigatorCount;const _errs25 = errors;if(!((typeof data12 == "number") && (isFinite(data12)))){validate34.errors = [{instancePath:instancePath+"/investigatorCount",schemaPath:"#/properties/investigatorCount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs25 === errors;}else {var valid0 = true;}if(valid0){if(data.authors !== undefined){let data13 = data.authors;const _errs27 = errors;if(errors === _errs27){if(Array.isArray(data13)){var valid3 = true;const len1 = data13.length;for(let i1=0; i1<len1; i1++){const _errs29 = errors;if(typeof data13[i1] !== "string"){validate34.errors = [{instancePath:instancePath+"/authors/" + i1,schemaPath:"#/properties/authors/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs29 === errors;if(!valid3){break;}}}else {validate34.errors = [{instancePath:instancePath+"/authors",schemaPath:"#/properties/authors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs27 === errors;}else {var valid0 = true;}if(valid0){if(data.statuses !== undefined){let data15 = data.statuses;const _errs31 = errors;if(errors === _errs31){if(Array.isArray(data15)){var valid4 = true;const len2 = data15.length;for(let i2=0; i2<len2; i2++){const _errs33 = errors;if(typeof data15[i2] !== "string"){validate34.errors = [{instancePath:instancePath+"/statuses/" + i2,schemaPath:"#/properties/statuses/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs33 === errors;if(!valid4){break;}}}else {validate34.errors = [{instancePath:instancePath+"/statuses",schemaPath:"#/properties/statuses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs31 === errors;}else {var valid0 = true;}if(valid0){if(data.tags !== undefined){let data17 = data.tags;const _errs35 = errors;if(errors === _errs35){if(Array.isArray(data17)){var valid5 = true;const len3 = data17.length;for(let i3=0; i3<len3; i3++){const _errs37 = errors;if(typeof data17[i3] !== "string"){validate34.errors = [{instancePath:instancePath+"/tags/" + i3,schemaPath:"#/properties/tags/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs37 === errors;if(!valid5){break;}}}else {validate34.errors = [{instancePath:instancePath+"/tags",schemaPath:"#/properties/tags/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs35 === errors;}else {var valid0 = true;}if(valid0){if(data.created !== undefined){const _errs39 = errors;if(typeof data.created !== "string"){validate34.errors = [{instancePath:instancePath+"/created",schemaPath:"#/properties/created/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs39 === errors;}else {var valid0 = true;}if(valid0){if(data.updated !== undefined){const _errs41 = errors;if(typeof data.updated !== "string"){validate34.errors = [{instancePath:instancePath+"/updated",schemaPath:"#/properties/updated/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs41 === errors;}else {var valid0 = true;}if(valid0){if(data.hash !== undefined){const _errs43 = errors;if(typeof data.hash !== "string"){validate34.errors = [{instancePath:instancePath+"/hash",schemaPath:"#/properties/hash/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs43 === errors;}else {var valid0 = true;}if(valid0){if(data.hidden !== undefined){const _errs45 = errors;if(typeof data.hidden !== "boolean"){validate34.errors = [{instancePath:instancePath+"/hidden",schemaPath:"#/properties/hidden/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs45 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}else {validate34.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate34.errors = vErrors;return errors === 0;}const schema27 = {"type":"object","properties":{"version":{"type":"number","const":3},"code":{"type":"string"},"options":{"type":"array","items":{"$ref":"#/definitions/Option_3"}},"projectId":{"type":"array","items":{"type":"string"}},"name":{"type":"string"},"description":{"type":"string"},"artist":{"type":["null","string"]},"info":{"type":["null","string"]},"website":{"type":["null","string"]},"cardsLink":{"type":["null","string"]},"scenarioCount":{"type":"number"},"investigatorCount":{"type":"number"},"authors":{"type":"array","items":{"type":"string"}},"statuses":{"type":"array","items":{"type":"string"}},"tags":{"type":"array","items":{"type":"string"}},"created":{"type":"string"},"updated":{"type":"string"},"hash":{"type":"string"}},"required":["authors","code","created","description","hash","investigatorCount","name","options","projectId","scenarioCount","statuses","tags","updated","version"]};const schema28 = {"type":"object","properties":{"name":{"type":"string"},"parts":{"type":"array","items":{"$ref":"#/definitions/Part"}}},"required":["name","parts"]};function validate42(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.name === undefined) && (missing0 = "name")) || ((data.parts === undefined) && (missing0 = "parts"))){validate42.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.name !== undefined){const _errs1 = errors;if(typeof data.name !== "string"){validate42.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.parts !== undefined){let data1 = data.parts;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs5 = errors;if(!(validate16(data1[i0], {instancePath:instancePath+"/parts/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate16.errors : vErrors.concat(validate16.errors);errors = vErrors.length;}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate42.errors = [{instancePath:instancePath+"/parts",schemaPath:"#/properties/parts/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}}}}else {validate42.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate42.errors = vErrors;return errors === 0;}function validate41(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((((((((((((data.authors === undefined) && (missing0 = "authors")) || ((data.code === undefined) && (missing0 = "code"))) || ((data.created === undefined) && (missing0 = "created"))) || ((data.description === undefined) && (missing0 = "description"))) || ((data.hash === undefined) && (missing0 = "hash"))) || ((data.investigatorCount === undefined) && (missing0 = "investigatorCount"))) || ((data.name === undefined) && (missing0 = "name"))) || ((data.options === undefined) && (missing0 = "options"))) || ((data.projectId === undefined) && (missing0 = "projectId"))) || ((data.scenarioCount === undefined) && (missing0 = "scenarioCount"))) || ((data.statuses === undefined) && (missing0 = "statuses"))) || ((data.tags === undefined) && (missing0 = "tags"))) || ((data.updated === undefined) && (missing0 = "updated"))) || ((data.version === undefined) && (missing0 = "version"))){validate41.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.version !== undefined){let data0 = data.version;const _errs1 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){validate41.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}if(3 !== data0){validate41.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/const",keyword:"const",params:{allowedValue: 3},message:"must be equal to constant"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.code !== undefined){const _errs3 = errors;if(typeof data.code !== "string"){validate41.errors = [{instancePath:instancePath+"/code",schemaPath:"#/properties/code/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.options !== undefined){let data2 = data.options;const _errs5 = errors;if(errors === _errs5){if(Array.isArray(data2)){var valid1 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){const _errs7 = errors;if(!(validate42(data2[i0], {instancePath:instancePath+"/options/" + i0,parentData:data2,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate42.errors : vErrors.concat(validate42.errors);errors = vErrors.length;}var valid1 = _errs7 === errors;if(!valid1){break;}}}else {validate41.errors = [{instancePath:instancePath+"/options",schemaPath:"#/properties/options/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.projectId !== undefined){let data4 = data.projectId;const _errs8 = errors;if(errors === _errs8){if(Array.isArray(data4)){var valid2 = true;const len1 = data4.length;for(let i1=0; i1<len1; i1++){const _errs10 = errors;if(typeof data4[i1] !== "string"){validate41.errors = [{instancePath:instancePath+"/projectId/" + i1,schemaPath:"#/properties/projectId/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;if(!valid2){break;}}}else {validate41.errors = [{instancePath:instancePath+"/projectId",schemaPath:"#/properties/projectId/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs12 = errors;if(typeof data.name !== "string"){validate41.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs14 = errors;if(typeof data.description !== "string"){validate41.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.artist !== undefined){let data8 = data.artist;const _errs16 = errors;if((data8 !== null) && (typeof data8 !== "string")){validate41.errors = [{instancePath:instancePath+"/artist",schemaPath:"#/properties/artist/type",keyword:"type",params:{type: schema27.properties.artist.type},message:"must be null,string"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.info !== undefined){let data9 = data.info;const _errs18 = errors;if((data9 !== null) && (typeof data9 !== "string")){validate41.errors = [{instancePath:instancePath+"/info",schemaPath:"#/properties/info/type",keyword:"type",params:{type: schema27.properties.info.type},message:"must be null,string"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.website !== undefined){let data10 = data.website;const _errs20 = errors;if((data10 !== null) && (typeof data10 !== "string")){validate41.errors = [{instancePath:instancePath+"/website",schemaPath:"#/properties/website/type",keyword:"type",params:{type: schema27.properties.website.type},message:"must be null,string"}];return false;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.cardsLink !== undefined){let data11 = data.cardsLink;const _errs22 = errors;if((data11 !== null) && (typeof data11 !== "string")){validate41.errors = [{instancePath:instancePath+"/cardsLink",schemaPath:"#/properties/cardsLink/type",keyword:"type",params:{type: schema27.properties.cardsLink.type},message:"must be null,string"}];return false;}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.scenarioCount !== undefined){let data12 = data.scenarioCount;const _errs24 = errors;if(!((typeof data12 == "number") && (isFinite(data12)))){validate41.errors = [{instancePath:instancePath+"/scenarioCount",schemaPath:"#/properties/scenarioCount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs24 === errors;}else {var valid0 = true;}if(valid0){if(data.investigatorCount !== undefined){let data13 = data.investigatorCount;const _errs26 = errors;if(!((typeof data13 == "number") && (isFinite(data13)))){validate41.errors = [{instancePath:instancePath+"/investigatorCount",schemaPath:"#/properties/investigatorCount/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.authors !== undefined){let data14 = data.authors;const _errs28 = errors;if(errors === _errs28){if(Array.isArray(data14)){var valid3 = true;const len2 = data14.length;for(let i2=0; i2<len2; i2++){const _errs30 = errors;if(typeof data14[i2] !== "string"){validate41.errors = [{instancePath:instancePath+"/authors/" + i2,schemaPath:"#/properties/authors/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs30 === errors;if(!valid3){break;}}}else {validate41.errors = [{instancePath:instancePath+"/authors",schemaPath:"#/properties/authors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.statuses !== undefined){let data16 = data.statuses;const _errs32 = errors;if(errors === _errs32){if(Array.isArray(data16)){var valid4 = true;const len3 = data16.length;for(let i3=0; i3<len3; i3++){const _errs34 = errors;if(typeof data16[i3] !== "string"){validate41.errors = [{instancePath:instancePath+"/statuses/" + i3,schemaPath:"#/properties/statuses/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs34 === errors;if(!valid4){break;}}}else {validate41.errors = [{instancePath:instancePath+"/statuses",schemaPath:"#/properties/statuses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs32 === errors;}else {var valid0 = true;}if(valid0){if(data.tags !== undefined){let data18 = data.tags;const _errs36 = errors;if(errors === _errs36){if(Array.isArray(data18)){var valid5 = true;const len4 = data18.length;for(let i4=0; i4<len4; i4++){const _errs38 = errors;if(typeof data18[i4] !== "string"){validate41.errors = [{instancePath:instancePath+"/tags/" + i4,schemaPath:"#/properties/tags/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs38 === errors;if(!valid5){break;}}}else {validate41.errors = [{instancePath:instancePath+"/tags",schemaPath:"#/properties/tags/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs36 === errors;}else {var valid0 = true;}if(valid0){if(data.created !== undefined){const _errs40 = errors;if(typeof data.created !== "string"){validate41.errors = [{instancePath:instancePath+"/created",schemaPath:"#/properties/created/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs40 === errors;}else {var valid0 = true;}if(valid0){if(data.updated !== undefined){const _errs42 = errors;if(typeof data.updated !== "string"){validate41.errors = [{instancePath:instancePath+"/updated",schemaPath:"#/properties/updated/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs42 === errors;}else {var valid0 = true;}if(valid0){if(data.hash !== undefined){const _errs44 = errors;if(typeof data.hash !== "string"){validate41.errors = [{instancePath:instancePath+"/hash",schemaPath:"#/properties/hash/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs44 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}else {validate41.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate41.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs0 = errors;let valid0 = false;const _errs1 = errors;if(!(validate11(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var _valid0 = _errs1 === errors;valid0 = valid0 || _valid0;if(!valid0){const _errs2 = errors;if(!(validate15(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);errors = vErrors.length;}var _valid0 = _errs2 === errors;valid0 = valid0 || _valid0;if(!valid0){const _errs3 = errors;if(!(validate20(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate20.errors : vErrors.concat(validate20.errors);errors = vErrors.length;}var _valid0 = _errs3 === errors;valid0 = valid0 || _valid0;if(!valid0){const _errs4 = errors;if(!(validate27(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate27.errors : vErrors.concat(validate27.errors);errors = vErrors.length;}var _valid0 = _errs4 === errors;valid0 = valid0 || _valid0;if(!valid0){const _errs5 = errors;if(!(validate34(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate34.errors : vErrors.concat(validate34.errors);errors = vErrors.length;}var _valid0 = _errs5 === errors;valid0 = valid0 || _valid0;if(!valid0){const _errs6 = errors;if(!(validate41(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate41.errors : vErrors.concat(validate41.errors);errors = vErrors.length;}var _valid0 = _errs6 === errors;valid0 = valid0 || _valid0;}}}}}if(!valid0){const err0 = {instancePath,schemaPath:"#/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;validate10.errors = vErrors;return false;}else {errors = _errs0;if(vErrors !== null){if(_errs0){vErrors.length = _errs0;}else {vErrors = null;}}}validate10.errors = vErrors;return errors === 0;}